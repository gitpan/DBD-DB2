Building DBD::DB2
-----------------
1.  The DBD::DB2 driver is supported by DB2 UDB V5.2 and
    later.  For existing DB2 UDB V5.0 customers, FixPak 6
    is required.  The actual FixPak 6 numbers for the
    supported operating system platforms are as follows:
        AIX - U459852
        HP V10 - U459854
        HP V11 - U459872
        Solaris - U459853
        Windows NT - 9074
    See http://www.software.ibm.com/data/db2/perl for more
    information on supported environments.
2.  The DB2 Software Developer's Kit or DB2 Application
    Development Client is required.
3.  The build must be performed in a properly configured
    DB2 environment or the DB2_HOME environment variable
    must point to the installed location of DB2.

Special Notes re: Perl Object abstraction/ActivePerl 5.005
----------------------------------------------------------
1.  DBI 1.13 has a bug that causes DBD builds to fail, do
    not use this version of DBI if Perl Object abstraction
    is enabled (ActivePerl 5.005 always has this enabled).
    DBI 1.12 is OK.  The DBI PPM package 1.13.1 is also OK,
    it has the necessary patch. ActivePerl 5.6 does not
    use Perl Object abstraction.

Special Notes re: Linux
-----------------------
Some versions of gcc have problems with optimization.  This
can cause Contants.C to take a long time to compile.  Please
be patient, it will probably finish eventually.  If it
doesn't, or the resulting build causes a 'Total
Environment allocation failure!' error when you try to
connect, you will have to edit the Makefile (after running
perl Makefile.PL) and change:

        OPTIMIZE = -O2
          to
        OPTIMIZE = -O0

Special Notes re: HP-UX
-----------------------
1.  At the present time, HP-UX V11 cannot dynamically load
    libraries that contain thread local storage.  As such,
    additional libraries, -lpthread and -lcl, MUST be
    specified when building perl.  If this is not done,
    errors will occur during the DBD::DB2 "make test" phase.
2.  In order to avoid some warnings when building perl, DBI,
    and DBD::DB2, you may want to add the compile option,
    +DAportable.  This compile option is used to generate
    code that is compatible across both PA_RISC 1.1 and 2.0
    workstations and servers.
3.  If an "out of memory" error is returned when compiling
    the file Constants.c during the DBD::DB2 build process,
    remove the "+Onolimit" compile option from the file
    Makefile.PL in the Constants subdirectory and restart
    the build process.  Removing this compile option will
    result in a warning like "Exceeding compiler resource
    limits in constants; some optimizations skipped", but
    this warning can be ignored.

Using DBD::DB2
--------------
1.  Note that as of DB2 UDB CLI V5.0, deferred prepare is on
    by default (DBD::DB2 is a CLI application).  To change
    this behaviour, the value of the DEFERREDPREPARE keyword
    in db2cli.ini must be changed.  Support is not yet
    available to change this value at the statement level
    (via a statement attribute).

Unsupported Features
--------------------
1.  Fetching any type of LOB directly to a file.
2.  $dbh->type_info
3.  $dbh->type_info_all
4.  The child process of a fork cannot use the DB2 Perl driver
    whatsoever.  In addition the child process must turn on the
    InactiveDestroy flag for any DBI handles inherited.
5.  Local row caching: $dbh->{RowCacheSize} and $sth->{RowsInCache}
